
/*
  cron { 'install-invoke-puppet-at-reboot':
    command => 'puppet apply /root/pemaster.pp',
    user    => 'root',
    special    => 'reboot',
    ensure => present,
    #unless => '/root/testpath.sh',
  }
  */

  $ifcfgeth0 = '
  # Generated by parse-kickstart
DEVICE=eth0
IPV6INIT=no
BOOTPROTO=none
UUID=f9998d7e-9a42-4a8b-88cd-e67897c35df0
ONBOOT=yes
TYPE=Ethernet
PROXY_METHOD=none
BROWSER_ONLY=no
DEFROUTE=yes
IPV4_FAILURE_FATAL=no
NAME="System eth0"
ZONE=work
IPADDR=192.168.1.13
GATEWAY=192.168.1.1
PREFIX=24
DNS1=192.168.1.7
DNS2=192.168.1.5
DNS3=192.168.1.6
'

  $testpath = "#!/bin/bash

if [ -d /opt/puppetlabs/server ]; then
    exit 0
else 
    exit 1
fi
"

  $testpath2 = "#!/bin/bash

if [ -d /root/puppet-enterprise-2019.7.0-el-7-x86_64 ]; then
    exit 0
else 
    exit 1
fi
"

$peconf = '"console_admin_password": "password"
"puppet_enterprise::puppet_master_host": "%{::trusted.certname}"
'

$startinstall = '#!/bin/bash

if [ -d /opt/puppetlabs/server ]; then

    echo "PE already installed"
else 

    export LANG=en_US.UTF-8
    export LANGUAGE=en_US.UTF-8
    export LC_ALL=en_US.UTF-8

    /root/puppet-enterprise-2019.7.0-el-7-x86_64/puppet-enterprise-installer -c /root/pe.conf

fi
'


  file { "/etc/sysconfig/network-scripts/ifcfg-eth0" :
    ensure   => present,
    #source => '/root/ifcfg-eth0',
    content => $ifcfgeth0,
  }

  file { "/root/testpath.sh" :
    ensure   => present,
    #source => '/root/ifcfg-eth0',
    content => $testpath,
    mode => '0655',
  }

  file { "/root/testpath2.sh" :
    ensure   => present,
    #source => '/root/ifcfg-eth0',
    content => $testpath2,
    mode => '0655',
  }

  file { "/root/startinstall.sh" :
    ensure   => present,
    #source => '/root/ifcfg-eth0',
    content => $startinstall,
    mode => '0655',
  }

  file { "/root/pe.conf" :
    ensure   => present,
    #source => '/root/ifcfg-eth0',
    content => $peconf,
    mode => '0644',
  }

  exec { 'pmom01.vrgt.xyz':
    command => "/usr/bin/hostnamectl set-hostname PMoM01.vrgt.xyz",
    unless => "/usr/bin/test `/usr/bin/hostname` = 'pmom01.vrgt.xyz'"
  }

  reboot { 'after':
    subscribe => Exec['pmom01.vrgt.xyz'],
  }

  $peurl = "https://s3.amazonaws.com/pe-builds/released/2019.7.0/puppet-enterprise-2019.7.0-el-7-x86_64.tar.gz"

  file { "/root/puppet-enterprise-2019.7.0-el-7-x86_64.tar.gz" :
      ensure   => present,
      source => $peurl,
  }

  exec { "/root/puppet-enterprise-2019.7.0-el-7-x86_64.tar.gz":
    command => "tar zxf /root/puppet-enterprise-2019.7.0-el-7-x86_64.tar.gz",
    path => "/usr/bin/",
    unless => '/root/testpath2.sh',
    subscribe => [File["/root/puppet-enterprise-2019.7.0-el-7-x86_64.tar.gz"], File['/root/testpath2.sh']],
  }

  firewall { '100 PE required ports':
    dport  => [22, 443, 4432, 4433, 5432, 8080, 8081, 8140, 8142, 8143, 8170],
    proto  => 'tcp',
    action => 'accept',
    subscribe => Exec["/root/puppet-enterprise-2019.7.0-el-7-x86_64.tar.gz"],
  }

  exec { '/root/startinstall.sh':
    unless => '/root/testpath.sh',
    subscribe => [Firewall['100 PE required ports'], File['/root/testpath.sh'],File['/root/pe.conf']],
  }
