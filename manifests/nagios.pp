class nagios::server::standalone {


  $ifcfgeth0 = '
  # Generated by parse-kickstart
DEVICE=eth0
IPV6INIT=no
BOOTPROTO=none
UUID=f9998d7e-9a42-4a8b-88cd-e67897c35df0
ONBOOT=yes
TYPE=Ethernet
PROXY_METHOD=none
BROWSER_ONLY=no
DEFROUTE=yes
IPV4_FAILURE_FATAL=no
NAME="System eth0"
ZONE=work
IPADDR=172.26.144.15
GATEWAY=172.26.144.1
PREFIX=24
DNS1=172.26.144.1
'

  file { "/etc/sysconfig/network-scripts/ifcfg-eth0" :
    ensure   => present,
    content => $ifcfgeth0,
  }


  exec { 'nagios.vrgt.xyz':
    command => "/usr/bin/hostnamectl set-hostname nagios.vrgt.xyz",
    unless => "/usr/bin/test `/usr/bin/hostname` = 'nagios.vrgt.xyz'"
  }

  reboot { 'after':
    subscribe => [Exec['nagios.vrgt.xyz']],
  }

  #include ::mysql::server
  include ::mysql::client

  package { ["httpd", "php", "php-mysql", "php-fpm", "gcc", "glibc" ,"glibc-common", "gd", "gd-devel", "make", "net-snmp", "openssl-devel", "xinetd", "unzip"]:
    ensure => installed,
  }

  service { 'httpd':
    ensure  => running,
    enable  => true,
  }



  firewall { '100 WEB required ports':
    dport  => [22, 443, 80],
    proto  => 'tcp',
    action => 'accept',
    subscribe => Service['httpd'],
  }

  class { '::mysql::server':
    root_password    => '',
    override_options => { 'mysqld' => { 'max_connections' => '1024' } }
  }

/*

  service { 'mariadb':
    ensure  => running,
    enable  => true,
  }

  */




/*

  package { ["httpd","mariadb-server","mariadb", "php", "php-mysql", "php-fpm", "gcc", "glibc" ,"glibc-common", "gd", "gd-devel", "make", "net-snmp", "openssl-devel", "xinetd", "unzip"]:
    ensure => installed,
  }

  */

/*
  service { nagios:
    ensure  => running,
    enable  => true,
    require => Exec['make-nag-cfg-readable'],
  }
  */

/*
  # This is because puppet writes the config files so nagios can't read them
  exec {'make-nag-cfg-readable':
    command => "find /etc/nagios -type f -name '*cfg' | xargs chmod +r",
  }
  */

/*
  file { 'resource-d':
    path   => '/etc/nagios/resource.d',
    ensure => directory,
    owner  => 'nagios',
  }
  */





}


